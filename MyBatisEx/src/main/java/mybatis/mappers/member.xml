<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mapper.member">
	<resultMap type="memberVO" id="memResult">
		<result property="id" column="id" />
		<result property="pwd" column="pwd" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="joinDate" column="joinDate" />
	</resultMap>

	<select id="selectAllMemberList" resultMap="memResult">
		select * from t_member order by joinDate desc
	</select>
	
	<select id="selectName" resultType="String">
		select name from t_member where id = 'joo'
	</select>
	
	<select id="selectPwd" resultType="int">
		select pwd from t_member where id = 'joo'
	</select>
	
	<select id="selectMemberById" resultType="memberVO" parameterType="String">
		select * from t_member where id=#{id}
	</select>
	
	<select id="selectMemberByPwd" resultMap="memResult" parameterType="int">
		select * from t_member where pwd=#{pwd}
	</select>
	
	<insert id="insertMember" parameterType="memberVO">
		insert into t_member(id, pwd, name, email) 
		values(#{id}, #{pwd}, #{name}, #{email})
	</insert>
	
	<insert id="insertMemberByHashMap" parameterType="java.util.HashMap">
		insert into t_member(id, pwd, name, email) 
		values(#{id}, #{pwd}, #{name}, #{email})
	</insert>
	
	<update id="updateMember" parameterType="memberVO">
		update t_member set pwd=#{pwd}, name=#{name}, email=#{email} 
		where id=#{id}
	</update>
	
	<delete id="deleteMember" parameterType="String">
		delete from t_member where id=#{id}
	</delete>
	
<!--
	<![CDATA[]]>
		xml과 sql의 특수문자 같은 경우를 포함하여 문자 충돌을 방지하기 위한 태그
-->
<!-- 
	<select id="searchMember" parameterType="memberVO" resultMap="memResult">
		<![CDATA[
			select * from t_member
		]]>
		
		<where>
			<if test="name != '' and name != null">
				name=#{name}
			</if>
			
			<if test="email != '' and email != null">
				and email=#{email}
			</if>
		</where>
		order by joinDate desc
	</select>
-->
	
	<select id="searchMember" parameterType="memberVO" resultMap="memResult">
		<![CDATA[
			select * from t_member
		]]>
		
		<where>
			<choose>
				<when test="name != '' and name != null and email != '' and email != null">
					name=#{name} and email=#{email}
				</when>
				
				<when test="name != '' and name != null">
					name=#{name}					
				</when>
				
				<when test="email != '' and email != null">
					email=#{email}
				</when>
			</choose>
		</where>
		order by joinDate desc
	</select>
	
	<!-- collection 속성의 값이 리스트인 경우엔 list, 배열인 경우엔 array 설정 -->
	<select id="foreachSelect" parameterType="java.util.List" resultMap="memResult">
		<![CDATA[
			select * from t_member
		]]>
		where name in
		
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
</mapper>
  
